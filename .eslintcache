[{"/workspace/tmp.hug0/src/App.js":"1","/workspace/tmp.hug0/src/index.js":"2","/workspace/tmp.hug0/src/reportWebVitals.js":"3","/workspace/tmp.hug0/src/physics/engine.js":"4","/workspace/tmp.hug0/src/physics/usePhysics.js":"5","/workspace/tmp.hug0/src/physics/index.js":"6","/workspace/tmp.hug0/src/components/logo.js":"7","/workspace/tmp.hug0/src/components/index.js":"8","/workspace/tmp.hug0/src/components/player.js":"9","/workspace/tmp.hug0/src/components/hole.js":"10","/workspace/tmp.hug0/src/components/title.js":"11","/workspace/tmp.hug0/src/physics/components/index.js":"12","/workspace/tmp.hug0/src/physics/components/Bodies.js":"13","/workspace/tmp.hug0/src/physics/useEngine.js":"14","/workspace/tmp.hug0/src/p5/p5-1.js":"15","/workspace/tmp.hug0/src/p5/p5-2.js":"16","/workspace/tmp.hug0/src/p5/p5-3.js":"17","/workspace/tmp.hug0/src/p5/p5-4.js":"18","/workspace/tmp.hug0/src/p5/p5-5.js":"19","/workspace/tmp.hug0/src/p5/p5-6.js":"20","/workspace/tmp.hug0/src/p5/p5-7.js":"21","/workspace/tmp.hug0/src/p5/p5-8.js":"22","/workspace/tmp.hug0/src/p5/p5-9.js":"23","/workspace/tmp.hug0/src/p5/p5-10.js":"24"},{"size":16157,"mtime":1611281409070,"results":"25","hashOfConfig":"26"},{"size":500,"mtime":1607112586000,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1607112586000,"results":"28","hashOfConfig":"26"},{"size":4962,"mtime":1611193507025,"results":"29","hashOfConfig":"26"},{"size":405,"mtime":1608401072000,"results":"30","hashOfConfig":"26"},{"size":81,"mtime":1611087672051,"results":"31","hashOfConfig":"26"},{"size":2456,"mtime":1611077709391,"results":"32","hashOfConfig":"26"},{"size":94,"mtime":1611078224011,"results":"33","hashOfConfig":"26"},{"size":5663,"mtime":1611268354245,"results":"34","hashOfConfig":"26"},{"size":2964,"mtime":1611193021715,"results":"35","hashOfConfig":"26"},{"size":1367,"mtime":1611150181861,"results":"36","hashOfConfig":"26"},{"size":24,"mtime":1608405846000,"results":"37","hashOfConfig":"26"},{"size":1436,"mtime":1611162377566,"results":"38","hashOfConfig":"26"},{"size":159,"mtime":1611114439843,"results":"39","hashOfConfig":"26"},{"size":1433,"mtime":1611241956316,"results":"40","hashOfConfig":"26"},{"size":2159,"mtime":1611242780576,"results":"41","hashOfConfig":"26"},{"size":932,"mtime":1611244140046,"results":"42","hashOfConfig":"26"},{"size":958,"mtime":1611244458116,"results":"43","hashOfConfig":"26"},{"size":1177,"mtime":1611244854586,"results":"44","hashOfConfig":"26"},{"size":1336,"mtime":1611245697146,"results":"45","hashOfConfig":"26"},{"size":976,"mtime":1611246089086,"results":"46","hashOfConfig":"26"},{"size":1142,"mtime":1611246529276,"results":"47","hashOfConfig":"26"},{"size":1633,"mtime":1611248843796,"results":"48","hashOfConfig":"26"},{"size":767,"mtime":1611247111076,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jy86gw",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/workspace/tmp.hug0/src/App.js",["107","108","109","110"],"/workspace/tmp.hug0/src/index.js",[],["111","112"],"/workspace/tmp.hug0/src/reportWebVitals.js",[],"/workspace/tmp.hug0/src/physics/engine.js",["113"],"import React, { useEffect, useState } from 'react';\nimport Matter from \"matter-js\";\nimport { EngineContext } from \"./useEngine\"\n\nimport { Player, Hole, H } from '../components'\n\nexport const Engine = (props) => {\n\n  const [eg, setEngine] = useState(null);\n  const [playerB, setPlayerB] = useState(null);\n\n  // const [mouse] = useState(  .create(document.querySelector(\"body\")) );\n\n  const boxRef = props.box//getRef(null)\n  const canvasRef = props.canvas//useRef(null)\n\n  /*   useEffect(() => {\n      console.log(eg)\n    }, [eg]) */\n\n  useEffect(() => {\n    let Engine = Matter.Engine\n    let Render = Matter.Render\n    let World = Matter.World\n    let Bodies = Matter.Bodies\n\n    let engine = Engine.create({})\n\n    setEngine(engine);\n    engine.world.gravity.y = 0;\n    /*  console.log(engine)\n     console.log('oo') */\n\n    let render = Render.create({\n      element: boxRef.current,\n      engine: engine,\n      canvas: canvasRef.current,\n      options: {\n        width: props.width,\n        height: props.height,\n        showAngleIndicator: true,\n        wireframeBackground: 'transparent',\n        background: 'transparent'\n      },\n    })\n\n    //walls\n    let localWidth = window.innerWidth;\n    let localHeight = window.innerHeight;\n    var wallTop = Bodies.rectangle(localWidth / 2, 0, localWidth, 40, {\n      isStatic: true\n    });\n    var wallBottom = Bodies.rectangle(\n      localWidth / 2,\n      localHeight,\n      localWidth,\n      40,\n      {\n        isStatic: true\n      }\n    );\n    var wallRight = Bodies.rectangle(\n      localWidth,\n      localHeight / 2,\n      40,\n      localHeight,\n      {\n        isStatic: true\n      }\n    );\n    var wallLeft = Bodies.rectangle(0, localHeight / 2, 40, localHeight, {\n      isStatic: true\n    });\n\n    World.add(engine.world, [wallBottom, wallTop, wallLeft, wallRight]);\n\n    //Matter.Body.translate( wallLeft, {x: 100, y: 0});\n    //Matter.Body.translate( wallRight, {x: 100, y: 0}) \n    var ballBody = Bodies.circle(100 + 10, localHeight - 100 - 10, 10 + 2 /* + 5 */, {\n      restitution: 1,\n      friction: 0.3,\n      frictionAir: 0.05,\n      label: 'ball',\n      collisionFilter: {\n        category: '0x0002'\n      }\n    });\n    var holeBody = Bodies.circle(localWidth - 100, localHeight - 100, 10, {\n      collisionFilter: {\n        category: '0x0002'\n      },\n      label: 'hole',\n      isSensor: true,\n      isStatic: true\n    });\n    World.add(engine.world, [ballBody, holeBody]);\n    setPlayerB(ballBody)\n\n    const handleCollision = (event) => {\n      var { pairs } = event;\n      pairs.forEach((pair) => {\n        var { bodyA, bodyB } = pair;\n        if (bodyA.label === \"ball\" && bodyB.label === \"hole\") {\n          Matter.Body.setVelocity(bodyA, {\n            x: 0,\n            y: 0\n          });\n          Matter.Body.setPosition(bodyA, {\n            x: 170,\n            y: 450\n          });\n          console.log(\"Hole!\");\n        }\n      });\n    }\n\n    Matter.Events.on(engine, 'collisionStart', handleCollision);\n\n\n    Engine.run(engine)\n    Render.run(render)\n\n\n    const resizeListener = () => {\n      localWidth = window.innerWidth;\n      localHeight = window.innerHeight;\n      World.remove(engine.world, wallRight);\n\n      wallRight = Bodies.rectangle(\n        localWidth,\n        localHeight / 2,\n        40,\n        localHeight,\n        {\n          isStatic: true\n        }\n      );\n      World.add(engine.world, [wallRight]);\n\n      //wallBottom.setPosition(engine, localWidth / 2, localHeight )\n      //Matter.Body.scale( wallRight, 1.5, 1.2);\n      /*  Matter.Body.translate( wallBottom, {x: localWidth / 2, y: localHeight})\n       Matter.Body.translate( wallRight, {x: 200, y: 0})  */\n      console.log(localWidth + \" \" + localHeight)\n      console.log(wallRight)\n\n    }\n\n    window.addEventListener('resize', resizeListener);\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n\n      Matter.Events.off(engine, 'collisionStart')\n    }\n\n  }, [/* props.options, props.events */])\n\n\n\n  /*   return (\n      <>\n        { eg ?\n          <EngineContext.Provider value={eg}>\n            <div\n              ref={boxRef}\n              style={{\n                width: 300,\n                height: 300,\n                position: 'absolute',\n                opacity: 0.5,\n              }}\n            >\n              <canvas ref={canvasRef} />\n            </div>\n            {props.children}\n          </EngineContext.Provider>\n          : null\n        }\n      </>\n    ) */\n\n  return (\n    <>\n      <H />\n      {/* <Title text={text} textRef={h1text} /> */}\n      {playerB && <Player color={0xeef1f5} radios={10} body={playerB}/*  matter={Matter} */ />}\n      <Hole />\n      {\n        eg &&\n        <EngineContext.Provider value={eg}>{props.children}</EngineContext.Provider>\n      }\n    </>\n    /*  eg ? <EngineContext.Provider value={eg}>{props.children}</EngineContext.Provider> : \n     null */\n  )\n\n\n}\n","/workspace/tmp.hug0/src/physics/usePhysics.js",[],"/workspace/tmp.hug0/src/physics/index.js",[],"/workspace/tmp.hug0/src/components/logo.js",[],"/workspace/tmp.hug0/src/components/index.js",[],"/workspace/tmp.hug0/src/components/player.js",["114","115","116","117","118"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { Graphics, useTick, useApp, Container } from '@inlet/react-pixi';\n\nimport { CircleBody } from '../physics/components';\nimport Matter from \"matter-js\";\n\nexport const Player = (props) => {\n    const app = useApp()\n    const height = 40;\n\n    const [x, setX] = useState(0);\n    const [y, setY] = useState(0);\n    const [mposition, setMposition] = useState({ position: { x: 0, y: 0 } });\n\n    const pMove = (e) => {\n        if (e.x && e.y) {\n            let mouse = {\n                position: {\n                    x: e.x,\n                    y: e.y\n                }\n            }\n           // console.log(e)\n\n            setMposition(mouse)\n        }\n    }\n\n    const pDown = (e) => {\n        //e.preventDefault()\n        setclick(true)\n\n        console.log('m down')\n\n    }\n\n    //const [mouse] = useState(Matter.Mouse.create(document.querySelector(\"body\")))\n    //const [mousestate, setMousestate] = useState(null);\n\n    const pUp = (e) => {\n        //e.preventDefault()\n        setclick(false)\n\n        //return;\n        if (props.body.velocity.x < 1 || props.body.velocity.y < 1) {\n\n            let mouse = {\n                position: {\n                    x: e.x,\n                    y: e.y\n                }\n            }\n            console.log('tacada')\n            var force = 0.1 // 0.2;\n            var deltaVector = Matter.Vector.sub(mouse.position, props.body.position);\n            var normalizedDelta = Matter.Vector.normalise(deltaVector);\n            var forceVector = Matter.Vector.mult(normalizedDelta, force);\n            var op = Matter.Vector.neg(forceVector);\n            //arrowSize = 0;\n            //mousedown = false;\n            //setclick(false)\n            Matter.Body.applyForce(props.body, props.body.position, op);\n        }\n    }\n\n    //   const player = useRef(null);\n\n    useEffect(() => {\n        //console.log( mouse)\n        //const update = () => setSize(getSize());\n        //window.onresize = update;\n        //return () => (window.onresize = null);\n\n\n        window.addEventListener('mouseup', pUp);\n        window.addEventListener('mousedown', pDown);\n        // clean up function\n        window.addEventListener('mousemove', pMove);\n\n\n        //console.log('body render')\n        return () => {\n            // remove resize listener\n            window.removeEventListener('mouseup');\n            window.removeEventListener('mousedown');\n            window.removeEventListener('mousemove');\n        }\n\n    }, []);\n\n    const [arrow, update] = useState(0)\n    const [click, setclick] = useState(false)\n\n    const [rotation, setRotation] = useState(0);\n    //  useReducer(reducer, initialArgs, init); its a better setState for comprex states\n    const angle = (x, y) => {\n        return Math.atan2(y, x) + Math.PI / 2;\n    }\n\n    useTick(delta => {\n\n        setX(props.body.position.x);\n        setY(props.body.position.y);\n        //player.position = ballBody.position;\n        //return\n        if (click) {\n\n            let deltaVector = Matter.Vector.sub(mposition.position, props.body.position)\n\n            // console.log(angle(deltaVector.x, deltaVector.y))\n            setRotation(angle(deltaVector.x, deltaVector.y))\n            update({\n                arrowSize: 60,\n                /*  rotation:  */\n            })\n\n        }\n        else {\n            //let deltaVector = props.matter.Vector.sub( mouse.position, props.body)\n\n            /* Matter.Vector.sub(mouse.position, body); */\n            //setRotation(0)\n            update({\n                arrowSize: 0,\n                /*     rotation: angle(deltaVector.x, deltaVector.y) */\n            })\n        }\n    })\n\n\n\n    //BallBody(100, 100, props.radios);\n    const options = {\n        restitution: 1,\n        friction: 0.3,\n        frictionAir: 0.05,\n        label: 'ball',\n        collisionFilter: {\n            category: '0x0002'\n        }\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        console.log('The link was clicked.');\n    }\n    return (\n        <Container x={x} y={y} rotation={rotation} /*  onPointerDown={console.log('m')} */ /* position={[100, app.screen.height - 100]}  */>\n            <Arrow {...arrow} height={height}></Arrow>\n            <Ball radios={props.radios}  /* interactive={true} onClick={() => {console.log('click')}} */ />\n            {/* <BallBody></BallBody> */}\n            {/* <CircleBody x={100} y={ app.screen.height - 100} radios={props.radios} options={options} ></CircleBody> */}\n        </Container>\n    )\n}\n\n/* const BallBody = (x, y, radios) => {\n\n    const options = {\n        restitution: 1,\n        friction: 0.3,\n        frictionAir: 0.05,\n        label: 'ball',\n        collisionFilter: {\n            category: '0x0002'\n        }\n    }\n    //Bodies(x, y, options)\n    CircleBody(x, y, radios, options)\n}\n\n */\nconst Ball = (props) => {\n    const draw = useCallback((g) => {\n        g.clear()\n        g.beginFill(0xf3f3f3);\n        g.drawCircle(0, 0, props.radios);\n        g.endFill();\n    }, [props]);\n    return <Graphics draw={draw} />;\n}\nconst Arrow = (props) => {\n    /*  useTick(delta => {\n       // do something here\n     }) */\n    const draw = useCallback((g) => {\n        g.clear()\n        g.beginFill(0xF04D4D);\n        g.drawPolygon(\n            [\n                8,\n                props.arrowSize,\n                0,\n                props.arrowSize + 8,\n                -8,\n                props.arrowSize,\n                -8,\n                0,\n                8,\n                0\n            ]\n        );\n        g.endFill();\n    }, [props.arrowSize]);\n    return <Graphics draw={draw} />;\n}","/workspace/tmp.hug0/src/components/hole.js",["119"],"import React, { useCallback, useState } from 'react';\nimport { Graphics, useTick, useApp, Container } from '@inlet/react-pixi';\n\nexport const H = (props) => {\n    const app = useApp()\n    const [motion, update] = useState()\n\n    useTick(delta => {\n        update({\n            position: [ app.screen.width - 100, app.screen.height - 100]\n        })\n\n    })\n\n    return (\n        <Container {...motion}>\n            <HoleP />\n        </Container>\n    )\n\n}\n\nexport const Hole = (props) => {\n    const app = useApp()\n    //const [size, setSize] = useState(window.innerWidth/window.innerHeight);\n    const [motion, update] = useState()\n    //  useReducer(reducer, initialArgs, init); its a better setState for comprex states\n    useTick(delta => {\n\n        update({\n            position: [app.screen.width - 100, app.screen.height - 100]\n        })\n    })\n    /* useTick(delta => {\n      //const i = (iter.current += 0.05 * delta)\n      update({\n        type: 'update',\n        data: {\n          position: [app.screen.width - 100, app.screen.height - 100]\n        }\n      })\n    }) */\n\n    return (\n        <Container {...motion} /* scale={size}  position={[app.screen.width - 100, app.screen.height - 100]} */ >\n            <Flag />\n            <FlagStick />\n        </Container>\n    );\n}\n\n\nconst Flag = (props) => {\n    /*  useTick(delta => {\n       // do something here\n     }) */\n    const pw = 10 //pole width\n    const ph = 80 //pole height\n\n    let tmpp1 = -pw / 2 - 40\n    let tmpp2 = -ph + 2\n    const tmpsize = 40\n\n    const draw = useCallback((g) => {\n        g.clear()\n            .beginFill(0xF04D4D)\n            .moveTo(-pw / 2, tmpp2)\n            .lineTo(tmpp1, tmpp2 + tmpsize / 2 - 5)\n            .quadraticCurveTo(tmpp1 - 10, tmpp2 + tmpsize / 2, tmpp1, tmpp2 + tmpsize / 2 + 5)\n            .lineTo(-pw / 2, tmpp2 + tmpsize)\n            .endFill()\n        /*  g.clear();\n         g.beginFill(props.color);\n         g.drawRect(props.x, props.y, props.width, props.height);\n         g.endFill(); */\n\n    }, []);\n    return <Graphics draw={draw} />;\n}\n\nconst FlagStick = (props) => {\n    /*  useTick(delta => {\n       // do something here\n     })\n    */\n    const pw = 10 //pole width\n    const ph = 80 //pole height\n    let sp = - pw / 2 //mid\n\n    const draw = useCallback((g) => {\n        g.clear()\n            .beginFill(0xf3f3f3)\n            .moveTo(sp, 15)\n            .arc(sp + pw / 2, -ph, pw / 2, Math.PI, 0)\n            .lineTo(sp + pw, 15)\n            .endFill()\n        /*  g.clear();\n         g.beginFill(props.color);\n         g.drawRect(props.x, props.y, props.width, props.height);\n         g.endFill(); */\n\n    }, [sp]);\n    return <Graphics draw={draw} />;\n}\n\nconst HoleP = (props) => {\n\n    const draw = useCallback((g) => {\n        g.clear();\n        g.beginFill(0x424242);\n        //g.drawCircle(0, 0, 15);\n        g.drawEllipse(0 , 2, 15, 13)\n        g.endFill();\n    }, []);\n\n    return (\n        <Graphics draw={draw} />\n    );\n}","/workspace/tmp.hug0/src/components/title.js",["120","121"],"import React, {  useEffect, useState } from 'react';\nimport { Text, Container } from '@inlet/react-pixi';\nimport { TextStyle } from 'pixi.js';\n\n\nexport const Title = (props) => {\n\n    const [chars, setChars] = useState([])\n\n    useEffect(() => {\n\n        const ar = [];\n        // console.log(props.textRef.current.childNodes)\n        props.textRef.current.childNodes.forEach(\n            c => {\n                const tmp = c.getBoundingClientRect()\n\n                // console.log(tmp)\n                ar.push({ char: c.innerText, x: tmp.x, y: tmp.y, })\n            }\n        )\n\n       // setChars(ar)\n       // console.log(chars)\n    }, []);\n\n    const style = new TextStyle({\n        /* align: \"center\", */\n        fontFamily: \"Arial\",\n        fontSize: 100,\n        fontWeight: \"bold\",\n        fill: '#ffffff',\n        stroke: \"#000000\",\n        strokeThickness: 2,\n        /*  fill: [\"#26f7a3\", \"#01d27e\"],\n       \n         letterSpacing: 5, */\n        /*  wordWrap: true */\n        /*wordWrapWidth: 10 */\n    });\n\n    return (\n        <Container>\n            {/*  <Text text={props.text} x={0} y={0} style={style} /> */}\n            {\n                chars.map((c, index) =>\n                    <Text key={index} text={c.char} x={c.x} y={c.y} style={style} />\n                    /* console.log(c) */\n                )\n            }\n        </Container>\n    )\n}","/workspace/tmp.hug0/src/physics/components/index.js",[],"/workspace/tmp.hug0/src/physics/components/Bodies.js",["122"],"import { useEffect } from 'react';\nimport Matter from \"matter-js\";\nimport { useEngine } from '../useEngine'\n\n/* const Circle = PixiComponent('Rectangle', {\n    create: props => new Graphics(),\n    applyProps: (instance, _, props) => {\n      const { x, y, width, height, fill } = props;\n      instance.clear();\n      instance.beginFill(fill);\n      instance.drawRect(x, y, width, height);\n      instance.endFill();\n    },\n  });\n */\n\n\n/* Bodies.circle(100 + playerSize.radios, localHeight - 100 - playerSize.radios, playerSize.radios + 5, {\n  restitution: 1,\n  friction: 0.3,\n  frictionAir: 0.05,\n  label: 'ball',\n  collisionFilter: {\n    category: '0x0002'\n  }\n}); */\n\nexport const CircleBody = (props) => {\n  //console.log(root)\n  //ref.current = body;\n  //const ref = useForwardRef(bodyRef);\n  \n\n  const eg = useEngine();\n  /*   const engine = useContext(EngineContext)\n    console.log(engine)\n    console.log('circle') */\n  /*  useCallback((g) => { */\n\n  useEffect(() => {\n    console.log(props)\n    //let b = Matter.Bodies.circle(100, 100, 20);\n    let b = Matter.Bodies.circle(props.x, props.y, props.radios, props.options, props.maxSides)\n    // Matter.World.add(engine.world, [body])\n    Matter.World.add(eg.world, b)\n\n\n  }, []);\n/* \n  useEffect(() => {\n    const body = ref.current!;\n    Matter.Body.setPosition(body, { x: props.x, y: props.y });\n  }, [ref, props.x, props.y]); */\n\n  return (null)\n\n}\n\n//export default CircleBody","/workspace/tmp.hug0/src/physics/useEngine.js",[],"/workspace/tmp.hug0/src/p5/p5-1.js",[],"/workspace/tmp.hug0/src/p5/p5-2.js",[],"/workspace/tmp.hug0/src/p5/p5-3.js",["123"],"import React from 'react';\nimport p5 from 'p5';\n\nexport default class A3 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    Sketch = (p) => {\n\n        var width = 400;\n        var height = 400;\n\n        p.setup = () => {\n            p.createCanvas(400, 400);\n            p.noStroke();\n\n            p.background(255);\n            drawfigure();\n        }\n\n        /* p.draw = () => {\n\n        } */\n       \n\n        function drawfigure() {\n            p.fill(0);\n            for (let i = 1; i < width; i++) {\n                for (let j = 1; j < 40; j++) {\n                    p.circle(100 * (i / 8), 100 * (j / 8), p.random(0, 4));\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current)\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}></div>\n        )\n    }\n}","/workspace/tmp.hug0/src/p5/p5-4.js",[],"/workspace/tmp.hug0/src/p5/p5-5.js",[],"/workspace/tmp.hug0/src/p5/p5-6.js",["124"],"import React from 'react';\nimport p5 from 'p5';\n\nexport default class A6 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    Sketch = (p) => {\n\n        let width = 400\n        let size = 40;\n        let margin = 20;\n\n        let scale = 2;\n\n        p.setup = () => {\n            p.createCanvas(400, 400);\n            p.background(255);\n            p.noLoop();\n            p.noStroke();\n\n            p.colorMode( p.HSB, 360, 100, 100);\n\n            let l = width / (size + margin);\n\n            for (let j = 1; j < l - 1; j++) {\n\n                for (let i = 1; i < l - 1; i++) {\n\n                    p.fill( p.random(100), 80, 100);\n\n                    //circle( (size+margin)*j , (size+margin)*i , size );\n                    //fill(255)\n\n                    if (j % 2 == 0) {\n                        p.circle((size + margin) * j, (size + margin) * i, size - scale * i);\n                    } else {\n                        p.circle((size + margin) * j, (size + margin) * i + size, size - scale * (l - i));\n                    }\n                }\n\n            }\n\n        }\n\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current)\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}></div>\n        )\n    }\n}","/workspace/tmp.hug0/src/p5/p5-7.js",["125","126","127"],"import React from 'react';\nimport p5 from 'p5';\n\nexport default class A7 extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    Sketch = (p) => {\n        let w = 400;\n        let div = 10;\n\n        p.setup = () => {\n\n            p.createCanvas(w, 400);\n            p.noStroke();\n            //noLoop();  \n\n            let sqr = 8;\n            let lastSize = 800;\n\n            let sq = w / div;\n\n            for (let i = div; i > 0; i--) {\n\n                if (p.random([0, 1]) == 0) {\n                    p.fill(1, 255, 255);\n                } else {\n                    p.fill(255, 255, 0);\n                }\n\n                let m = sq * 3 / 4;\n                p.rect(0, 0, sq * i, m * i);\n\n            }\n\n        }\n\n    }\n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current)\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}></div>\n        )\n    }\n}","/workspace/tmp.hug0/src/p5/p5-8.js",[],"/workspace/tmp.hug0/src/p5/p5-9.js",[],"/workspace/tmp.hug0/src/p5/p5-10.js",[],{"ruleId":"128","severity":1,"message":"129","line":7,"column":16,"nodeType":"130","messageId":"131","endLine":7,"endColumn":20},{"ruleId":"128","severity":1,"message":"132","line":7,"column":22,"nodeType":"130","messageId":"131","endLine":7,"endColumn":27},{"ruleId":"128","severity":1,"message":"133","line":7,"column":29,"nodeType":"130","messageId":"131","endLine":7,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":81,"column":54,"nodeType":"136","messageId":"137","endLine":81,"endColumn":56},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":158,"column":6,"nodeType":"144","endLine":158,"endColumn":41,"suggestions":"145"},{"ruleId":"128","severity":1,"message":"146","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":20},{"ruleId":"128","severity":1,"message":"147","line":8,"column":11,"nodeType":"130","messageId":"131","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":89,"column":8,"nodeType":"144","endLine":89,"endColumn":10,"suggestions":"149"},{"ruleId":"128","severity":1,"message":"150","line":133,"column":11,"nodeType":"130","messageId":"131","endLine":133,"endColumn":18},{"ruleId":"128","severity":1,"message":"151","line":143,"column":11,"nodeType":"130","messageId":"131","endLine":143,"endColumn":22},{"ruleId":"142","severity":1,"message":"152","line":77,"column":8,"nodeType":"144","endLine":77,"endColumn":10,"suggestions":"153"},{"ruleId":"128","severity":1,"message":"154","line":8,"column":19,"nodeType":"130","messageId":"131","endLine":8,"endColumn":27},{"ruleId":"142","severity":1,"message":"155","line":25,"column":8,"nodeType":"144","endLine":25,"endColumn":10,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"157","line":48,"column":6,"nodeType":"144","endLine":48,"endColumn":8,"suggestions":"158"},{"ruleId":"128","severity":1,"message":"159","line":13,"column":13,"nodeType":"130","messageId":"131","endLine":13,"endColumn":19},{"ruleId":"134","severity":1,"message":"160","line":37,"column":31,"nodeType":"136","messageId":"137","endLine":37,"endColumn":33},{"ruleId":"128","severity":1,"message":"161","line":20,"column":17,"nodeType":"130","messageId":"131","endLine":20,"endColumn":20},{"ruleId":"128","severity":1,"message":"162","line":21,"column":17,"nodeType":"130","messageId":"131","endLine":21,"endColumn":25},{"ruleId":"134","severity":1,"message":"160","line":27,"column":38,"nodeType":"136","messageId":"137","endLine":27,"endColumn":40},"no-unused-vars","'Hole' is defined but never used.","Identifier","unusedVar","'Title' is defined but never used.","'Player' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boxRef', 'canvasRef', 'props.height', and 'props.width'. Either include them or remove the dependency array.","ArrayExpression",["165"],"'CircleBody' is defined but never used.","'app' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pUp'. Either include it or remove the dependency array.",["166"],"'options' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'tmpp1' and 'tmpp2'. Either include them or remove the dependency array.",["167"],"'setChars' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.textRef'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'eg.world' and 'props'. Either include them or remove the dependency array.",["169"],"'height' is assigned a value but never used.","Expected '===' and instead saw '=='.","'sqr' is assigned a value but never used.","'lastSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [boxRef, canvasRef, props.height, props.width]",{"range":"180","text":"181"},"Update the dependencies array to be: [pUp]",{"range":"182","text":"183"},"Update the dependencies array to be: [tmpp1, tmpp2]",{"range":"184","text":"185"},"Update the dependencies array to be: [props.textRef]",{"range":"186","text":"187"},"Update the dependencies array to be: [eg.world, props]",{"range":"188","text":"189"},[4010,4045],"[boxRef, canvasRef, props.height, props.width]",[2526,2528],"[pUp]",[2019,2021],"[tmpp1, tmpp2]",[639,641],"[props.textRef]",[1231,1233],"[eg.world, props]"]